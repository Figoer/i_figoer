*debug.txt* 调试

日志：
/var/log/maillog.*
    所有的PHP NOTICE WARNING ERROR信息都会记录在这个文件,
    标识：eyoumail_php_error

/usr/local/eyou/mail/log/
    程序记录的日志 |log|

------------------------------------------------------------------------------
调试开关：
/usr/local/eyou/mail/etc/eyou_mail.ini
    将PHP NOTICE WARNING信息输出到标准输出，默认是不输出的 >
    error_output_mode = EYOUM_EO_SYSLOG | EYOUM_EO_STDOUT
<
    短信发送调试，记录于/tmp/emimp_smssend_debug >
    imptype_smssend = "debug"
<
    短信提醒（邮件到达通知调试），记录于emimp_smsnotify_debug_mail_receive >
    imptype_smsnotify = "debug"

/usr/local/eyou/mail/etc/em_phpd.ini, em_innerapi.ini
    debug 开关控制各个进程的调试信息，
          当出现非正常业务逻辑时，即使debug关闭，也会记录INFO级别的日志 >
    debug = 1
    
------------------------------------------------------------------------------
web调试：
默认情况下，web页面是不会输出任何php的NOTICE WARNING，以及异常的错误信息的，
要显示错误信息，除了上述相关调试开关需要开启外，还需要修改入口程序：

/usr/local/eyou/mail/web/php/index.php >
    $front->throw_exceptions(false);
    改为
    $front->throw_exceptions(true);

    //$front->register_plugin(new em_controller_plugin_test);
    去掉注释为：
    $front->register_plugin(new em_controller_plugin_test);

一般我们通过 Firefox + Firebug插件 + FirePHP插件进行调试，
通过上述配置，以及FirePHP插件，可以在浏览器里看到session信息，以及数据库操作SQL语句

在PHP代码里，可以用FB::log(), FB::info(), FB::warning()等方法向FirePHP输出调试信息，
而不影响页面布局

------------------------------------------------------------------------------
api调试：
默认情况下，调用api抛异常时，只会返回500错误，而不会返回详细的错误信息。

/usr/local/eyou/mail/web/php/api/em_controller_action_api_abstract.class.php >
    public function action_handle()
    每个api都通过此方法进行调用，以及返回结果。

    } catch (exception $e) {
    方法里捕获异常的地方屏蔽异常信息，可以在这里输出异常信息

------------------------------------------------------------------------------
数据库查询调试： >
    <?php
    require_once 'conf_global.php';

    $db = em_db::singleton(); // db对象
    $profile = $db->get_profile(); // 获取profile对象
    $profile->set_enabled(true); // 在执行SQL之前设置记录sql执行记录

    // 一些数据库操作
    $db->fetch_all('select 1+1'); // 一些数据库操作
    $db->insert('user_config', array('config_name'=>'ttt', 'config_value'=>'ttt'));

    $querys = $profile->get_query_profiles(null, true); // 获取所有SQL操作
    foreach ($querys as $query) {
        echo $query->get_query_sql(), "\n",     // SQL 语句
             $query->get_elapsed_secs(), "\n";  // 执行时间
        print_r($query->get_bound_params());    // 绑定参数
        echo "\n";
    }

------------------------------------------------------------------------------
 vim:tw=78:ts=8:ft=help:norl:
