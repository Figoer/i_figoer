*code_operator.txt*     操作对象   *code_operator*

/usr/local/eyou/mail/app/lib/php/member/operator/*

操作对象是对属性对象|code_property|的实际操作，同时实现了内部的业务逻辑，
每个operator对象通常都提供了查询、添加、修改、删除的接口，
不同操作的对象的这些接口，规则都是类似的。

以用户白名单为例：user_white_list
get_xxx: get_white_list
    获取方法，参数为condition对象，xxx_user_white_list_get_white_list
add_xxx：add_white_list
    添加方法，参数为property对象，允许数组，这样就是添加多条记录，
    通常添加的时候会生产一个ID，此方法不直接返回ID，而是设置到property对象里。
mod_xxx: mod_white_list
    修改方法：参数为condition对象，xxx_user_white_list_mod_white_list
    condition包含两类参数，一类是条件，指明要修改哪些数据，
    一类是数据，指明要修改成什么，数据用property对象表示。
del_xxx: del_white_list
    删除方法：参数为condition对象，xxx_user_white_list_del_white_list

------------------------------------------------------------------------------
缓存机制：
operator需要处理一些内部业务逻辑，一般不直接操作数据源，而是将数据源再独立出
一层操作，通过这一层去操作数据源，这样这一层里就可以进行统一的缓存管理。

------------------------------------------------------------------------------
使用示例：|example_lib_member_operator|

------------------------------------------------------------------------------
 vim:tw=78:fo=tcq2:isk=!-~,^*,^\|,^\":ts=8:ft=help:norl:
